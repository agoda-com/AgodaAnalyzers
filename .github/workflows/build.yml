name: .NET Core Build and Publish

on:
  push:
    branches: master
  pull_request:
    branches: master

env:
  NETCORE_VERSION: '8.0.x'  
  GIT_REPO_ROOT: src
  MAJOR_MINOR_VERSION: 1.1.
  SOLUTION_FILE: AgodaAnalyzers.Build.sln

jobs:
  build:
    name: Build Package 
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK ${{ env.NETCORE_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}

    - name: Restore
      working-directory: ${{ env.GIT_REPO_ROOT }}        
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Build
      working-directory: ${{ env.GIT_REPO_ROOT }}        
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

    - name: Run Unit Tests and Generate Coverage
      uses: glennawatson/coverlet-msbuild@v1
      with:
        project-files: '**/*Test.csproj'
        no-build: true  
        output-format: cobertura
        output: results
        configuration: Release
        
    - name: Pack Release
      if: github.ref == 'refs/heads/master'
      working-directory: ${{ env.GIT_REPO_ROOT }}    
      run: dotnet pack ${{ env.SOLUTION_FILE }} --configuration Release -o finalpackage --no-build -p:PackageVersion=${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}

    - name: Pack Preview
      if: github.ref != 'refs/heads/master'
      working-directory: ${{ env.GIT_REPO_ROOT }}    
      run: dotnet pack ${{ env.SOLUTION_FILE }} --configuration Release -o finalpackage --no-build -p:PackageVersion=${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}-preview

    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: ${{ env.GIT_REPO_ROOT }}/finalpackage

    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: src/Agoda.Analyzers.Test/results.net6.cobertura.xml  # optional
        fail_ci_if_error: true # optional (default = false)

  deploy:
    needs: build
    name: Deploy Packages
    runs-on: ubuntu-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@master
        with:
          name: nupkg
          path: ./nupkg

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.NETCORE_VERSION }}

      - name: Push to NuGet
        run: dotnet nuget push nupkg/**/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://nuget.org --skip-duplicate

        
  release:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}
        release_name: ${{ env.MAJOR_MINOR_VERSION }}${{ github.run_number }}
        draft: true
        prerelease: false

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}